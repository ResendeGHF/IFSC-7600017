      BLOCK DATA
      INTEGER ISEED
      COMMON /SEEDBLK/ ISEED
      DATA ISEED /1154/ 
      END

      FUNCTION RANDS()
c     RETORNA DOUBLE PRECISION E ATUALIZA ISEED NO BLOCO ALOCADO
      DOUBLE PRECISION RANDS
      INTEGER ISEED
      COMMON /SEEDBLK/ ISEED

c     PARAMETROS PARA O GERADOR MINSTD (A=16807, M=2**31-1)
      INTEGER A, M, Q, R
      PARAMETER (A = 16807)
      PARAMETER (M = 2147483647)
c     PARAMETROS PARA O METODO DE SCHRANGE (PRE-CALCULADOS)
c     Q = M / A = 127773
c     R = M % A = 8776
      PARAMETER (Q = 127773)
      PARAMETER (R = 8776)

      INTEGER TEST

c     METODO DE SCHRANGE PARA CALCULAR '(A*ISEED)%M' SEM OVERFLOW
      TEST = A * (MOD(ISEED, Q)) - R * (ISEED / Q)
c     E SE O RESULTADO FOR NEGATIVO, LEVAR AO DOMINIO CORRETO.
      IF (TEST .LT. 0) THEN
         TEST = TEST + M
      END IF

      ISEED = TEST
      RANDS = DBLE(ISEED) / DBLE(M)
      RETURN
      END

      FUNCTION STEP(DPROB)
      REAL STEP, RVAL
      RVAL = RAND()
      IF ( RVAL .LT. DPROB ) THEN
         STEP = 1
      ELSE
         STEP = -1
      END IF
      RETURN
      END

      PROGRAM MAIN
      INTEGER NSTEP, MWALK, IOS, UNIT
      PARAMETER (DPROB=0.5,NSTEP=10000,MWALK=10000)
      REAL DPROB, X_POS(NSTEP,MWALK), X_MEAN(MWALK)
      REAL AVG1, AVG2
      DATA AVG1, AVG2 /2*0.0/
      DATA (X_POS(1,I),I=1,MWALK)/MWALK*0.0D0/
      DATA (X_MEAN(I),I=1,MWALK)/MWALK*0.0D0/

      DO 10 J = 2, NSTEP
         DO K = 1, MWALK
            X_POS(J,K) = STEP(DPROB)
            X_MEAN(K) = X_MEAN(K) + X_POS(J,K)
         END DO
10    CONTINUE

      UNIT = 10
      OPEN(UNIT=UNIT,FILE='positions.dat',STATUS='NEW',IOSTAT=IOS)
      IF ( IOS .NE. 0 ) THEN
         WRITE(6,'(A,I1,A,I2)') 'I/O ERROR COD: ', IOS,
     1 ' WHEN OPENING UNIT: ', UNIT
      ELSE
         WRITE(UNIT,*) X_MEAN
         CLOSE(UNIT)
      END IF

      DO I=1, MWALK
         AVG1 = AVG1 + X_MEAN(I)
         AVG2 = AVG2 + (X_MEAN(I) ** 2)
      END DO
      AVG1 = AVG1/MWALK
      AVG2 = AVG2/MWALK

      WRITE(6,*) AVG1,'', AVG2

      END
